cmake_minimum_required (VERSION 3.12)
project(quiz_suite)

if (EXISTS "$ENV{WORKSPACE}/sysconfig/cmake/physycom_config.cmake")
  message(STATUS "Enabling physycom settings")
  include("$ENV{WORKSPACE}/sysconfig/cmake/physycom_config.cmake")
else()
  message(STATUS "Unable to find physycom settings file")
endif()
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY $ENV{HOME}/bin)
foreach(OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES})
  string(TOUPPER ${OUTPUTCONFIG} OUTPUTCONFIG)
  if( OUTPUTCONFIG STREQUAL "RELEASE")
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} $ENV{HOME}/bin)
  else()
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_SOURCE_DIR}/bin/${OUTPUTCONFIG})
  endif()
endforeach(OUTPUTCONFIG CMAKE_CONFIGURATION_TYPES)

if(UNIX AND NOT APPLE)
  find_package(LibRt REQUIRED)
endif()
set(THREADS_PREFER_PTHREAD_FLAG ON)
find_package(Threads REQUIRED)
find_package(Boost COMPONENTS system filesystem REQUIRED)

include_directories( "${CMAKE_SOURCE_DIR}/src/" ${Boost_INCLUDE_DIRS})

add_executable(quiz_gen            "${CMAKE_SOURCE_DIR}/src/quiz_gen.cpp")
target_link_libraries(quiz_gen     Boost::system Boost::filesystem)

add_executable(quiz_grade          "${CMAKE_SOURCE_DIR}/src/quiz_grade.cpp")
add_executable(quiz_correct        "${CMAKE_SOURCE_DIR}/src/quiz_correct.cpp")
add_executable(quiz_stats          "${CMAKE_SOURCE_DIR}/src/quiz_stats.cpp")
add_executable(quiz_query          "${CMAKE_SOURCE_DIR}/src/quiz_query.cpp")

if(UNIX AND NOT APPLE)
  target_link_libraries(quiz_gen     LIBRT::LIBRT)
  target_link_libraries(quiz_grade   LIBRT::LIBRT)
  target_link_libraries(quiz_correct LIBRT::LIBRT)
  target_link_libraries(quiz_stats   LIBRT::LIBRT)
  target_link_libraries(quiz_query   LIBRT::LIBRT)
endif()

if(UNIX)
  target_link_libraries(quiz_gen     ${CMAKE_DL_LIBS})
  target_link_libraries(quiz_grade   ${CMAKE_DL_LIBS})
  target_link_libraries(quiz_correct ${CMAKE_DL_LIBS})
  target_link_libraries(quiz_stats   ${CMAKE_DL_LIBS})
  target_link_libraries(quiz_query   ${CMAKE_DL_LIBS})
endif()
